/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */

plugins {
    id 'org.springframework.boot' version '2.2.9.RELEASE' apply false
    id 'io.spring.dependency-management' version '1.0.9.RELEASE' apply false
    id 'idea'
}

idea {
    project {
        languageLevel = JavaVersion.VERSION_11
    }
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

description = 'Waka Waki'

Set<Project> boosterProjects = subprojects.findAll {it.name ==~ /.*-common/ }

configure(subprojects) {
    apply plugin: 'io.spring.dependency-management'

    apply plugin: 'java'
    apply plugin: 'java-library'

    group = 'com.manerfan.waka'
    version = '0.0.1-SNAPSHOT'

    java {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11

        withSourcesJar()
        // withJavadocJar()
    }

    repositories {
        mavenLocal()
        maven {
            name "aliyun maven central"
            url "https://maven.aliyun.com/repository/public"
        }
        mavenCentral()
        jcenter()
    }

    ext {
        set('springCloudAlibabaVersion', "2.2.1.RELEASE")
        set('springCloudVersion', "Hoxton.SR8")
        set('jupiterVersion', '5.6.2')
        set('assertjVersion', '3.17.1')
    }

    dependencyManagement {
        imports {
            mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springCloudAlibabaVersion}"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    dependencies {
        testImplementation "org.junit.jupiter:junit-jupiter-api:${jupiterVersion}"
        // JUnit Jupiter Engine to depend on the JUnit5 engine and JUnit 5 API
        testImplementation "org.junit.jupiter:junit-jupiter-engine:${jupiterVersion}"
        // JUnit Jupiter Engine to depend on the JUnit4 engine and JUnit 4 API
        testImplementation "org.junit.vintage:junit-vintage-engine:${jupiterVersion}"

        testImplementation "org.assertj:assertj-core:${assertjVersion}"
    }

    [compileJava, javadoc, compileTestJava]*.options*.encoding = 'UTF-8'

    test {
        useJUnitPlatform()
    }
}

// 单独配置 services
configure(subprojects - boosterProjects) {
    apply plugin: 'org.springframework.boot'

    dependencies {
        implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.boot:spring-boot-starter-logging'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    // 构建完成后将runable jar复制到deployment中
    task copyBootJar(type: Copy) {
        from 'build/libs'
        include "${project.getName()}-${project.getVersion()}.jar"

        into '../deploy/waka-waki/deployment/waka-waki-services'
        rename "${project.getName()}-${project.getVersion()}.jar", "${project.getName()}.jar"
    }
    bootJar.finalizedBy(copyBootJar)
}



